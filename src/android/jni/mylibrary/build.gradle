plugins {
    id 'com.android.library'
}

android {
    namespace 'org.apache.cordova.CTYMediaEditor'
    compileSdk 33

    defaultConfig {
        minSdk 24
        targetSdk 33
        externalNativeBuild {
            cmake {
                // todo cFlags设置未生效 , 在代码里面手动定义
                // 配置CMake可选参数
                //arguments "-DANDROID_ARM_NEON=TRUE", "-DANDROID_TOOLCHAIN=clang"

                // 为C 编译器设置可选 flags
                //cFlags "-D__STDC_HEADERS"

                // 为c++编译器设置flag ：使支持格式化 macro constants
                //cppFlags "-D__STDC_HEADERS"
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
           // jni.srcDirs = []
            jniLibs.srcDirs  = ["libs"]
        }
    }
    //使用Cmake打包.so    https://developer.android.google.cn/ndk/guides/cmake?hl=zh_cn#gradle
    externalNativeBuild {
        cmake {
            //指定CMakeLists.txt的路径
            path "src/jni/CMakeLists.txt"
        }
    }
}

dependencies {
    //implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

task copyLibs(type: Copy) {
    from ('build\\intermediates\\stripped_native_libs\\debug\\out\\lib') {
        include '**/*.so'
    }
    into 'src/main/jniLibs'
}

tasks.whenTaskAdded { task ->
      task.dependsOn copyLibs
}